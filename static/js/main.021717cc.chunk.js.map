{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","LENGTH","length","ALPHABET","localeCompare","reverse","App","state","NONE","sortByAlphabetically","setState","sortByLength","this","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAGG,OAASF,EAAGE,OAExB,KAAKX,EAASY,SACZ,OAAOJ,EAAGK,cAAcJ,GAE1B,QACE,OAAO,MAITJ,GACFC,EAAaQ,UAGRR,G,SAlCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAMe,EAAb,4MACEC,MAAyB,CACvBX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,qBAAuB,WACrB,EAAKC,SAAS,CAAEf,SAAUJ,EAASY,YAPvC,EAUEQ,aAAe,WACb,EAAKD,SAAS,CAAEf,SAAUJ,EAASU,UAXvC,EAcEI,QAAU,WACR,EAAKK,UAAS,SAACH,GAAD,MAAY,CACxBX,YAAaW,EAAMX,gBAhBzB,4CAoBE,WAA2B,IAAD,OACxB,EAAiCgB,KAAKL,MAA9BX,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SAEpB,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYpB,IAAaJ,EAASY,WAEtCa,QAAS,WACP,EAAKP,wBAPT,iCAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYpB,IAAaJ,EAASU,SAEtCe,QAAS,WACP,EAAKL,gBAPT,4BAaA,wBACEG,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAanB,IAClDoB,QAAS,WACP,EAAKX,WAJT,sBAUEV,IAAaJ,EAASiB,MAAQZ,IAC9B,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKN,SAAS,CACZd,YAAY,EACZD,SAAUJ,EAASiB,QANzB,sBAeJ,6BACGf,EAAkBD,EAAiBoB,KAAKL,OAAOU,KAAI,SAACC,GAAD,OAClD,oBACE,UAAQ,OADV,SAIGA,GAFIA,eAlFnB,GAAyBC,IAAMC,WCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.021717cc.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render(): React.ReactNode {\n    const { isReversed, sortType } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => {\n              this.sortByAlphabetically();\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => {\n              this.sortByLength();\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button is-warning', { 'is-light': !isReversed })}\n            onClick={() => {\n              this.reverse();\n            }}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map((good) => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}